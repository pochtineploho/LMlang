func int[] findPrimes(int n) {
    if (n < 2) {
        return {};
    }

    int[] isPrime = int[n + 1]; // Объявление массива булевых значений
    for (int i = 0; i <= n; ++i) {
        isPrime[i] = 1;
    }
    isPrime[0] = 0;
    isPrime[1] = 0;

    for (int i = 2; i * i <= n; ++i) {
        //print(i);
        int tmp = isPrime[i];
        if (tmp == 1) {
            for (int j = i * i; j <= n; j = j + i) {
                isPrime[j] = 0;
            }
        }
    }

    int primeCount = 0;

    for (int i = 2; i <= n; ++i) {
        int tmp = isPrime[i];
        if (tmp == 1) {
            primeCount = primeCount + 1;
        }
    }

    int[] primes = int[primeCount + 1]; // Инициализация массива с заданной емкостью
    int index = 0;
    for (int i = 2; i <= n; ++i) {
        int tmp = isPrime[i];
        if (tmp == 1) {
            primes[index] = i;
            index = index + 1;
        }
    }
    primes[index] = 0;

    return primes;
}

func int main() {
    int n = 10000;
    int[] primes = findPrimes(n);
    print(primes[0]);
    for (int i = 0; i < n; ++i) {
        int tmp = primes[i];
        if (tmp != 0){
            print(primes[i]);
        } else {
            return 0;
        }
    }
    return 0;
}
