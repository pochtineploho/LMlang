func int[] findPrimes(int n) {
    if (n < 2) {
        return {};
    }

    bool[] isPrime = bool[n + 1]; // Объявление массива булевых значений
    for (int i = 0; i <= n; ++i) {
        isPrime[i] = true;	
    }
    isPrime[0] = false;
    isPrime[1] = false;

    for (int i = 2; i * i <= n; ++i) {
        if (isPrime[i]) {
            for (int j = i * i; j <= n; j = j + i) {
                isPrime[j] = false;
            }
        }
    }

    int primeCount = 0;
    for (int i = 2; i <= n; ++i) {
        if (isPrime[i]) {
            primeCount = primeCount + 1;
        }
    }

    int[] primes = int[primeCount + 1]; // Инициализация массива с заданной емкостью
    int index = 0;
    for (int i = 2; i <= n; ++i) {
    	
        if (isPrime[i]) {
            primes[index] = i;
            index = index + 1;
        }
    }
    primes[index] = 0;

    return primes;
}

func int main() {
    int n = 10000;
    int[] primes = findPrimes(n);
    for (int i = 0; i < n; ++i) {
        if (primes[i]!=0){
            print(primes[i]);
        } else {
            i = n;
        }
    }
    return 0;
}

