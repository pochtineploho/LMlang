func int[] findPrimes(int n) {
    if (n < 2) {
        return {};
    }
    int[] isPrime = int[n + 1]; // Объявление массива булевых значений
    for (int i = 0; i <= n; ++i) {
        isPrime[i] = 1;
        print(i);
    }

    print(101);

    for (int t = 0; t <= n; ++t) {
       print(t);
       print(isPrime[t]);
    }

    print(3);

    isPrime[0] = 0;
    isPrime[1] = 0;

    for (int i = 2; i * i <= n; ++i) {
        if (isPrime[i] == 1) {
            for (int j = i * i; j <= n; j = j + i) {
                isPrime[j] = 0;
            }
        }
    }

    int primeCount = 0;
    print(primeCount);
    for (int i = 2; i <= n; ++i) {
        if (isPrime[i] == 1) {
            primeCount = primeCount + 1;
        }
    }
    print(primeCount);
    int[] primes = int[primeCount + 1]; // Инициализация массива с заданной емкостью
    int index = 0;
    for (int i = 2; i <= n; ++i) {
    	
        if (isPrime[i] == 1) {
            print(i);

            primes[index] = i;
            index = index + 1;
        }
    }
    primes[index] = 0;

    return primes;
}

func int main() {
    int n = 100;
    int[] primes = findPrimes(n);

    return 0;
}

